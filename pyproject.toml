[build-system]
requires = ["uv_build>=0.8.13,<0.9.0"]
build-backend = "uv_build"

[project]
name = "qtile-bonsai"
version = "0.5.0"
description = "A flexible custom layout for the qtile window manager that supports arbitrarily nestable tabs and splits."
readme = "README.md"
requires-python = ">=3.12"
license = {text = "MIT"}
keywords = ["qtile", "bonsai", "tiling", "window", "manager", "layout"]
authors = [
  { name = "Aravinda Rao", email = "maniacalace@gmail.com" },
]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
  "Topic :: Desktop Environment :: Window Managers",
]
dependencies = [
  "psutil",
]

[project.urls]
Documentation = "https://github.com/aravinda0/qtile-bonsai#readme"
Issues = "https://github.com/aravinda0/qtile-bonsai/issues"
Source = "https://github.com/aravinda0/qtile-bonsai"
"Visual Guide" = "https://aravinda0.github.io/qtile-bonsai/static/visual_guide/"


# ðŸ’¡ Note: Run the following first before running `uv sync`. Needed to trigger qtile ffi
# builder, for qtile wayland dependencies.
# uv pip install --no-cache --config-setting backend=wayland --reinstall-package qtile --group dev
[dependency-groups]
dev = [
    "xcffib",
    "cairocffi",
    "qtile",
    "pytest",
    "pytest-cov",
    "pytest-xdist",
    "pyvirtualdisplay",
    "pywlroots",
    "pywayland",
    "xkbcommon",
    "pyside6>=6.6.1",
    "pre-commit",
    "ruff",
    "jinja2>=3.1.3",
    "ptpython>=3.0.25",
    "basedpyright>=1.12.3",
    "towncrier>=23.11.0",
]


[[tool.uv.index]]
name = "testpypi"
url = "https://test.pypi.org/simple/"
publish-url = "https://test.pypi.org/legacy/"
explicit = true


[tool.coverage.run]
branch = true
parallel = true
concurrency = ["multiprocessing"]
omit = []

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.ruff]
line-length = 88
indent-width = 4
fix = true

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false

[tool.ruff.lint]
select = [
  "E", "F", "N", "S", "FBT", "B", "C4", "T20", "PT", "RET", "SIM", "RUF", "I",
]
ignore = [
  "S101",  # assert-used; temporary until some type annotations sorted out

  # When the above rule categories are enabled, we must ignore the following rules to
  # prevent conflicts with ruff's formatter. 
  # See: https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules
  "W191",
  "E111",
  "E114",
  "E117",
  "D206",
  "D300",
  "Q000",
  "Q001",
  "Q002",
  "Q003",
  "COM812",
  "COM819",
  "ISC001",
  "ISC002",
]
unfixable = [
  "T20",  # don't auto-remove print-statements
  "F841", # don't auto-remove (seemingly) unused variables
  "F401", # don't auto-remove (seemingly) unused imports
]

[tool.ruff.lint.isort]
known-first-party = ["qtile_bonsai"]
lines-after-imports = 2

# Disabling the following due to conflict with ruff formatter
# See: https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules
split-on-trailing-comma = false


[tool.towncrier]
directory = "newsfragments"
filename = "CHANGELOG.md"
package = "qtile_bonsai"
title_format = "## qtile-bonsai v{version} ({project_date})"
underlines = " "

[[tool.towncrier.type]]
directory = "breaking"
name = "Breaking Changes"
showcontent = true

[[tool.towncrier.type]]
directory = "feat"
name = "Features & Improvements"
showcontent = true

[[tool.towncrier.type]]
directory = "fix"
name = "Fixes"
showcontent = true

[[tool.towncrier.type]]
directory = "misc"
name = "Miscellaneous"
showcontent = true
